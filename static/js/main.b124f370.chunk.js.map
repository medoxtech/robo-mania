{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/searchbox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","obj","id","alt","name","username","email","CardList","cards","objs","filter","toLowerCase","includes","searchField","map","SearchBox","type","placeholder","onChange","e","searchObj","App","setState","target","value","state","fetch","then","response","json","data","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGe,SAASA,EAAKC,GAC5B,OACC,sBAAKC,UAAU,OAAf,UACC,qBACCC,IAAG,+BAA0BF,EAAMG,IAAIC,GAApC,aACHC,IAAI,YAEL,6BAAKL,EAAMG,IAAIG,OACf,6BAAKN,EAAMG,IAAII,WACf,4BAAIP,EAAMG,IAAIK,WCRF,SAASC,EAAST,GAChC,IAGMU,EAHUV,EAAMW,KAAKC,QAAO,SAACT,GAAD,OACjCA,EAAIG,KAAKO,cAAcC,SAASd,EAAMe,YAAYF,kBAE7BG,KAAI,SAACb,GAC1B,OAAO,cAACJ,EAAD,CAAmBI,IAAKA,GAAbA,EAAIC,OAGvB,OAAO,qBAAKH,UAAU,YAAf,SAA4BS,I,MCTrB,SAASO,EAAUjB,GACjC,OACC,qBAAKC,UAAU,aAAf,SACC,uBACCiB,KAAK,SACLC,YAAY,SACZC,SAAU,SAACC,GAAD,OAAOrB,EAAMsB,UAAUD,Q,IC+BtBE,E,kDAnCd,aAAe,IAAD,8BACb,gBAiBDD,UAAY,SAACD,GACZ,EAAKG,SAAS,CACbT,YAAaM,EAAEI,OAAOC,SAlBvB,EAAKC,MAAQ,CACZhB,KAAM,GACNI,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBa,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACL,EAAKR,SAAS,CACbb,KAAMqB,S,oBAWV,WACC,OACC,sBAAK/B,UAAU,MAAf,UACC,wCACA,cAACgB,EAAD,CAAWK,UAAWW,KAAKX,YAC3B,cAACb,EAAD,CAAUE,KAAMsB,KAAKN,MAAMhB,KAAMI,YAAakB,KAAKN,MAAMZ,qB,GA9B3CmB,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b124f370.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.style.css\";\n\nexport default function Card(props) {\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<img\n\t\t\t\tsrc={`https://robohash.org/${props.obj.id}?set=set3`}\n\t\t\t\talt=\"monster\"\n\t\t\t/>\n\t\t\t<h3>{props.obj.name}</h3>\n\t\t\t<h4>{props.obj.username}</h4>\n\t\t\t<p>{props.obj.email}</p>\n\t\t</div>\n\t);\n}\n","import React from \"react\";\nimport \"./CardList.style.css\";\nimport Card from \"../card/Card\";\n\nexport default function CardList(props) {\n\tconst newObjs = props.objs.filter((obj) =>\n\t\tobj.name.toLowerCase().includes(props.searchField.toLowerCase())\n\t);\n\tconst cards = newObjs.map((obj) => {\n\t\treturn <Card key={obj.id} obj={obj} />;\n\t});\n\n\treturn <div className=\"card-list\">{cards}</div>;\n}\n","import React from \"react\";\nimport \"./SearchBox.style.css\";\n\nexport default function SearchBox(props) {\n\treturn (\n\t\t<div className=\"search-box\">\n\t\t\t<input\n\t\t\t\ttype=\"search\"\n\t\t\t\tplaceholder=\"Search\"\n\t\t\t\tonChange={(e) => props.searchObj(e)}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/CardList\";\nimport SearchBox from \"./components/searchbox/SearchBox\";\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tobjs: [],\n\t\t\tsearchField: \"\",\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) =>\n\t\t\t\tthis.setState({\n\t\t\t\t\tobjs: data,\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tsearchObj = (e) => {\n\t\tthis.setState({\n\t\t\tsearchField: e.target.value,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Robots</h1>\n\t\t\t\t<SearchBox searchObj={this.searchObj} />\n\t\t\t\t<CardList objs={this.state.objs} searchField={this.state.searchField} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}